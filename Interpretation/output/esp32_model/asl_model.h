// ASL Sign Recognition Model for ESP32
// Generated by model_export_script.py

const char* ASL_CLASSES[] = {"a", "b", "c", "d"}; // 4 classes

// Scaling parameters (StandardScaler)
const float SCALER_MEAN[] = {940.171875, 1513.234375, 981.453125, 558.156250, 247.265625};

const float SCALER_SCALE[] = {893.033919, 947.420523, 645.364019, 682.183356, 432.815356};

// Representative value ranges for each sign (for basic fallback classification)
typedef struct {
  const char* sign;
  int finger1Min, finger1Max;
  int finger2Min, finger2Max;
  int finger3Min, finger3Max;
  int finger4Min, finger4Max;
  int finger5Min, finger5Max;
} ASLSignRange;

const ASLSignRange ASL_SIGN_RANGES[] = {
  { "a", 0, 4095, 0, 4095, 0, 4095, 0, 4095, 0, 4095 },
  { "b", 0, 4095, 0, 4095, 0, 4095, 0, 4095, 0, 4095 },
  { "c", 0, 4095, 0, 4095, 0, 4095, 0, 4095, 0, 4095 },
  { "d", 0, 4095, 0, 4095, 0, 4095, 0, 4095, 0, 4095 }
};

// Function to predict ASL sign from flex sensor values
String predictASLSign(int finger1, int finger2, int finger3, int finger4, int finger5) {
  // Simple rule-based prediction as a fallback
  for (int i = 0; i < 4; i++) {
    if (finger1 >= ASL_SIGN_RANGES[i].finger1Min && finger1 <= ASL_SIGN_RANGES[i].finger1Max &&
        finger2 >= ASL_SIGN_RANGES[i].finger2Min && finger2 <= ASL_SIGN_RANGES[i].finger2Max &&
        finger3 >= ASL_SIGN_RANGES[i].finger3Min && finger3 <= ASL_SIGN_RANGES[i].finger3Max &&
        finger4 >= ASL_SIGN_RANGES[i].finger4Min && finger4 <= ASL_SIGN_RANGES[i].finger4Max &&
        finger5 >= ASL_SIGN_RANGES[i].finger5Min && finger5 <= ASL_SIGN_RANGES[i].finger5Max) {
      return String(ASL_SIGN_RANGES[i].sign);
    }
  }

  // If no match found
  return "?";
}
